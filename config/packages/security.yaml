security:
    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: username

    encoders:
        App\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_READER: ROLE_USER

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        main:
            pattern:   ^/
            provider: user_provider
            stateless: true
            anonymous: true
            lexik_jwt: ~

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        - { path: ^/api$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, role: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ GET ] }
        - { path: ^/api/users$, role: IS_AUTHENTICATED_ANONYMOUSLY, methods: [ POST ] }
        - { path: ^/api, roles: [ ROLE_USER ], methods: [ POST, PUT, DELETE ] }


        #- { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY }